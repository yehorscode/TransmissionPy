# Generated by Django 5.2.4 on 2025-07-18 13:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(help_text='Channel (frequency) number from 1 to 30 (1-30)', unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('name', models.CharField(blank=True, help_text="Short name for the frequency (e.g., 'Whisper', 'Static')", max_length=20, null=True)),
                ('description', models.TextField(blank=True, help_text='A longer description for the frequency channel.')),
            ],
            options={
                'verbose_name_plural': 'Frequencies',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Transmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(help_text="Raw transmission data (e.g., '2341424', 'SOS', 'VICTOR CHARLIE 7')")),
                ('transmission_type', models.CharField(choices=[('numbers', 'Numbers'), ('names', 'Names'), ('mixed', 'Mixed')], default='numbers', help_text="How the code should be interpreted for TTS (e.g., 'one two three' or 'alpha bravo charlie')", max_length=20)),
                ('scheduled_time', models.DateTimeField(db_index=True, help_text='The exact UTC time when this transmission is scheduled to begin.')),
                ('duration_seconds', models.IntegerField(default=10, help_text='Estimated duration of the TTS audio in seconds. Used for tracking current transmissions.')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('transmitting', 'Transmitting'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='scheduled', help_text='Current status of the transmission.', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('frequency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transmissions', to='transmissions.frequency')),
            ],
            options={
                'verbose_name_plural': 'Transmissions',
                'ordering': ['scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='EncryptionKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_value', models.CharField(help_text="The actual key string (e.g., 'XRAY23DELTA' or a sequence of numbers)", max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text="Context or purpose of this key (e.g., 'Decryption key for 4.78 MHz messages on July 18th')")),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now, help_text='When this key becomes active or was first introduced.')),
                ('valid_until', models.DateTimeField(blank=True, help_text='When this key expires (optional, for time-limited keys).', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Controls if the key is currently considered usable by the system/users.')),
                ('associated_transmission', models.OneToOneField(blank=True, help_text="Optional: If this key was explicitly released as part of this transmission's payload.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='released_key', to='transmissions.transmission')),
            ],
            options={
                'verbose_name_plural': 'Encryption Keys',
                'ordering': ['-valid_from', 'key_value'],
            },
        ),
    ]
